{"version":3,"sources":["../src/map.js"],"names":["_","chroma","ChoroplethMap","ctrl","mapContainer","circles","createMap","console","log","map","window","L","GeoJSONBoundedMap","zoomIn","panel","mapping","initialZoom","scrollWheelZoom","disable","tiles","tileLayer","attribution","reuseTiles","detectRetina","addTo","invalidateSize","polygons","that","eachLayer","layer","removeLayer","opts","scale","coldColor","hotColor","steps","mode","style","color","weight","fillOpacity","geojson","clone","features","$","each","i","v","properties","push","values","item","limits","colors","length","geoJSON","feature","featureValue","fillColor","zoomToGeometries","remove"],"mappings":"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","file":"map.js","sourcesContent":["import _ from 'lodash';\nimport './external/leaflet/dist/leaflet';\nimport './external/leaflet-map-zoomToGeometries/dist/leaflet.map.zoomToGeometries.min';\nimport * as chroma from './external/chroma-js/chroma.min.js';\n\nexport default class ChoroplethMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.circles = [];\n\n    return this.createMap();\n  }\n\n  createMap() {\n    console.log('initializing map');\n    this.map = new window.L.GeoJSONBoundedMap(this.mapContainer);\n    this.map.zoomIn(this.ctrl.panel.mapping.initialZoom);\n    this.map.scrollWheelZoom.disable();\n\n    this.tiles = window.L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>',\n      reuseTiles: true,\n      detectRetina: true\n    });\n    this.tiles.addTo(this.map);\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  drawPolygons() {\n    if (this.ctrl.panel.mapping.polygons) {\n      var that = this;\n\n      this.map.eachLayer(function (layer) {\n        if (layer != that.tiles) {\n          that.map.removeLayer(layer);\n        }\n      });\n\n      var opts = {\n        scale: [\n          this.ctrl.panel.polygons.coldColor,\n          this.ctrl.panel.polygons.hotColor\n        ],\n        steps: 10, // number of breaks or steps in range\n        mode: 'q', // q for quantile, e for equidistant, k for k-means\n        style: {\n          color: '#fff',\n          weight: 1,\n          fillOpacity: .8\n        }\n      }\n\n      var geojson = _.clone(this.ctrl.panel.mapping.polygons);\n\n      var features = [];\n      $.each(geojson.features, function(i, v){\n        if (v.properties['choropleth'] > 0) {\n          features.push(v);\n        }\n      });\n      geojson.features = features;\n\n      var values = _.map(geojson.features, function (item) {\n        return item.properties['choropleth']\n      });\n\n      var limits = chroma.limits(values, opts.mode, opts.steps - 1)\n      var colors = chroma.scale(opts.scale).colors(limits.length)\n\n      if (geojson.features.length > 0) {\n        this.geojson = window.L.geoJSON(geojson, {\n          limits: limits,\n          colors: colors,\n          style: function (feature) {\n            var style = {};\n            var featureValue = feature.properties['choropleth'];\n            for (var i = 0; i < limits.length; i++) {\n              style.color = '#fff';\n              style.weight = 1;\n              style.fillOpacity = .5;\n              if (featureValue <= limits[i]) {\n                style.fillColor = colors[i]\n                break\n              }\n            }\n            return style;\n          }\n        });\n\n        if (this.map) {\n          this.geojson.addTo(this.map);\n        }\n        this.map.zoomToGeometries(this.geojson);\n      }\n    }\n  }\n\n  remove() {\n    this.map.remove();\n  }\n}\n"]}