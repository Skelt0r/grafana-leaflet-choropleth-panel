{"version":3,"sources":["../src/leaflet_choropleth_ctrl.js"],"names":["PanelCtrl","moment","_","$","mapRenderer","panelDefaults","polygons","hotColor","coldColor","endpoint","mapping","height","initialZoom","LeafletChoroplethCtrl","$scope","$injector","defaultsDeep","panel","id","events","on","onInitEditMode","bind","onPanelTeardown","fetchPolygons","that","window","ajax","url","type","dataType","contentType","crossDomain","success","response","map","drawPolygons","error","console","log","addEditorTab","dataList","err","onDataReceived","remove","scope","elem","attrs","ctrl","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;;AACDC,Y;;AACAC,O;;AACAC,O;;AAEAC,iB;;;;;;;;;;;;;;;;;;;;;AAEDC,mB,GAAgB;AACpBC,kBAAU;AACRC,oBAAU,gBADF;AAERC,qBAAW,gBAFH;AAGRC,oBAAW;AAHH,SADU;AAMpBC,iBAAS;AACPC,kBAAQ,GADD;AAEPC,uBAAY;AAFL;AANW,O;;uCAYTC,qB;;;AACX,uCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,oJACvBD,MADuB,EACfC,SADe;;AAE7Bb,YAAEc,YAAF,CAAe,MAAKC,KAApB,EAA2BZ,aAA3B;AACA,gBAAKY,KAAL,CAAWP,OAAX,CAAmBQ,EAAnB,GAAwB,WAAW,MAAKD,KAAL,CAAWC,EAA9C;AACA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA;AACA;AACA;AACA;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,eAAL,CAAqBD,IAArB,OAAjC;AACA,gBAAKE,aAAL;AAV6B;AAW9B;;;;0CAEe;AACd,gBAAI,KAAKP,KAAL,CAAWX,QAAX,CAAoBG,QAAxB,EAAkC;AAChC,kBAAIgB,OAAO,IAAX;AACAC,qBAAOvB,CAAP,CAASwB,IAAT,CAAc;AACZC,qBAAKH,KAAKR,KAAL,CAAWX,QAAX,CAAoBG,QADb;AAEZoB,sBAAM,KAFM;AAGZC,0BAAU,MAHE;AAIZC,6BAAa,kBAJD;AAKZC,6BAAa,IALD;AAMZC,yBAAS,iBAASC,QAAT,EAAmB;AAC1BT,uBAAKR,KAAL,CAAWP,OAAX,CAAmBJ,QAAnB,GAA8B4B,QAA9B;AACA,sBAAIT,KAAKU,GAAT,EAAc;AACZV,yBAAKU,GAAL,CAASC,YAAT;AACD;AACF,iBAXW;AAYZC,uBAAO,eAASH,QAAT,EAAmB;AACxBI,0BAAQC,GAAR,CAAYL,QAAZ;AACD;AAdW,eAAd;AAgBD,aAlBD,MAmBK;AACHI,sBAAQC,GAAR,CAAY,qBAAZ;AACD;AACF;;;2CAEgB;AACf,gBAAI,KAAKjC,QAAT,EAAmB;AACjB,mBAAK6B,GAAL;AACAG,sBAAQC,GAAR,CAAY,KAAKjC,QAAjB;AACD;AACF;;;2CAEgB;AACf,iBAAKkC,YAAL,CAAkB,kBAAlB,EAAsC,8DAAtC,EAAsG,CAAtG;AACD;;;yCAEcC,Q,EAAU,CACxB;;;sCAEWC,G,EAAK;AACf,iBAAKC,cAAL,CAAoB,EAApB;AACD;;;4CAEiB;AAChB,gBAAI,KAAKR,GAAT,EAAc,KAAKA,GAAL,CAASS,MAAT;AACf;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7B5C,wBAAYyC,KAAZ,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,IAAhC;AACD;;;;QA/DwChD,S;;;;AAkE3Ca,4BAAsBoC,WAAtB,GAAoC,aAApC","file":"leaflet_choropleth_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport $ from 'jquery';\n\nimport mapRenderer from './map_renderer';\n\nconst panelDefaults = {\n  polygons: {\n    hotColor: \"rgb(255, 0, 0)\",\n    coldColor: \"rgb(0, 0, 255)\",\n    endpoint:  null\n  },\n  mapping: {\n    height: 700,\n    initialZoom:1\n  }\n};\n\nexport class LeafletChoroplethCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n    this.panel.mapping.id = 'mapid_' + this.panel.id;\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    // this.events.on('data-received', this.onDataReceived.bind(this));\n    // this.events.on('data-error', this.onDataError.bind(this));\n    // this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    // this.events.on('render', this.onRender.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.fetchPolygons()\n  }\n\n  fetchPolygons() {\n    if (this.panel.polygons.endpoint) {\n      var that = this;\n      window.$.ajax({\n        url: that.panel.polygons.endpoint,\n        type: \"GET\",\n        dataType: \"json\",\n        contentType: \"application/json\",\n        crossDomain: true,\n        success: function(response) {\n          that.panel.mapping.polygons = response;\n          if (that.map) {\n            that.map.drawPolygons();\n          }\n        },\n        error: function(response) {\n          console.log(response)\n        },\n      });\n    }\n    else {\n      console.log('endpoint is not set');\n    }\n  }\n\n  redrawPolygons() {\n    if (this.polygons) {\n      this.map\n      console.log(this.polygons);\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Polygons Options', 'public/plugins/leaflet-choropleth-panel/polygons_editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onPanelTeardown() {\n    if (this.map) this.map.remove();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nLeafletChoroplethCtrl.templateUrl = 'module.html';"]}